<!DOCTYPE html>
    <head>
        <title>Select JS</title>
        <script>

            document.addEventListener("DOMContentLoaded", (event) => {
                const create = (tag, data = {}, logic = null) => {
                    const element = document.createElement(tag);
                    for(const [key, value] of Object.entries(data)) {
                        element[key] = value;
                    }
                    if(logic !== null) {
                        logic(element);
                    }
                    return element;
                };
                const elementOffset = (element) => {
                    if(!element.getClientRects().length) {
                        return {
                            'bottom': 0,
                            'left'  : 0,
                            'right' : 0,
                            'top'   : 0
                        };
                    }
                    const rect = element.getBoundingClientRect();
                    const win = element.ownerDocument.defaultView;
                    const result = {
                        'left'  : rect.left + win.pageXOffset,
                        'top'   : rect.top + win.pageYOffset
                    };
                    result['bottom'] = result['top'] + element.clientHeight;
                    result['right'] = result['left'] + element.clientWidth;
                    // NOTE: seemed to be off when using offsetHeight (need to test more)
                    return result;
                };
		        [...document.getElementsByClassName("selectJS")].forEach((element) => {
                    let cellExpand, divContainer, divOptions, tbodyOptions;
                    let isExpanded = false;
                    const appendOption = (value, text) => {
                        tbodyOptions.append(create("tr", {}, (tr) => {
                            tr.append(create("td", {
                                "innerHTML": text
                            }));
                        }));
                    };
                    const clearOptions = () => tbodyOptions.innerHTML = "";
                    const actionExpand = () => {
                        isExpanded = !isExpanded;
                        cellExpand.innerHTML = isExpanded ? "&#8743;" : "&#8744;";
                        if(isExpanded) {
                            const offset = elementOffset(divContainer);
                            divOptions.style.left = offset.left + 'px';
                            divOptions.style.top = (offset.bottom - 1) + 'px';
                            clearOptions();
                            appendOption("", "Example Option One");
                            appendOption("", "Example Option Two");
                            appendOption("", "Example Option Three");
                        }
                        divOptions.style.display = isExpanded ? "inline" : "none";
                    };
                    divContainer = create("div", {
                        "className": "selectJS-div selectJS-selection"
                    }, (container) => {
                        container.append(create("table", {}, (table) => {
                            table.append(create("tbody", {}, (tbody) => {
                                tbody.append(create("tr", {}, (tr) => {
                                    tr.append(create("td", {
                                        "innerHTML": "Selected Option Text"
                                    }));
                                    cellExpand = create("td", {
                                        "innerHTML": "&#8744;"
                                    }, (td) => {
                                        td.addEventListener("click", actionExpand);
                                    });
                                    tr.append(cellExpand);
                                }));
                            }));
                        }));
                    });
                    divOptions = create("div", {
                        "className": "selectJS-div selectJS-options"
                    }, (options) => {
                        options.append(create("table", {}, (table) => {
                            table.append(tbodyOptions = create("tbody", {}));
                        }));
                    });
                    element.className = "selectJS-hidden";
                    element.parentNode.append(divContainer);
                    element.parentNode.insertBefore(divOptions, null);
                });
            });

        </script>
        <style>

            .selectJS-hidden {
                display: none;
            }

            div.selectJS-div {
                background-color: rgba(0, 0, 0, 0);
                border: 1px solid rgb(0, 0, 0, 0);
                cursor: default;
                user-select: none;
                width: 240px;
            }

            div.selectJS-div > table {
                border: 1px solid rgb(0, 0, 0, 1);
                border-collapse: collapse;
                height: 100%;
                margin: 0px;
                padding: 0px;
                width: 100%;
            }

            div.selectJS-div > table > tbody > tr {
                background-color: rgba(0, 0, 0, 0.2);
            }

            div.selectJS-div > table > tbody > tr > td {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                text-align: left;
                padding-left: 5px;
                vertical-align: middle;
            }

            div.selectJS-options {
                display: none;
                height: 24px;
                position: fixed;
                z-index: 1;
            }

            div.selectJS-options > table > tbody > tr:hover {
                background-color: rgba(0, 0, 0, 0.1);
            }

            div.selectJS-selection {
                height: 24px;
            }

            div.selectJS-selection > table > tbody > tr > td:nth-child(2) {
                text-align: center;
                vertical-align: top;
                width: 24px;
            }

        </style>
    </head>
    <body>
        <select class="selectJS" data-url="https://jsonplaceholder.typicode.com/users"></select>
    </body>
</html>